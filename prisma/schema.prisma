// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  @@map("tags")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String    @unique
  bio           String?   @default("")
  image         String?   @default("")
  password      String
  isAdmin       Boolean   @default(false)
  isCompany     Boolean   @default(false)
  articles      Article[]
  likedArticles Article[] @relation("UserLikes")
  carts         Cart[]

  @@map("users")
}



model Article {
  id              Int                       @id @default(autoincrement())
  slug            String?                   @unique
  title           String
  description     String
  body            String
  price Int
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
  tagList         String[]
  favoritesCount  Int?                      @default(0)
  author          User?                     @relation(fields: [authorId], references: [id])
  authorId        Int?
  likedBy         User[]                    @relation("UserLikes")
  categories      Category[]
  characteristics MaterialCharacteristics[]
  packaging       Packaging[]
  cartItems       CartItem[]

  @@map("articles")
}

model Follow {
  id          Int @id @default(autoincrement())
  followerId  Int
  followingId Int
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  slugCt      String?   @unique
  description String
  products    Article[]

  @@map("categories")
}

model MaterialCharacteristics {
  id              Int     @id @default(autoincrement())
  product         Article @relation(fields: [articleId], references: [id])
  articleId       Int
  manufacturer    String // Производитель
  color           String // Цвет
  material        String // Материал
  style           String // Стиль
  purpose         String? // Назначение
  application     String? // Применение
  countryOfOrigin String? // Страна-производитель
  length          Float? // Длина, мм
  width           Float? // Ширина, мм
  thickness       Float? // Толщина, мм

  @@map("material_characteristics")
}

model Packaging {
  id                 Int     @id @default(autoincrement())
  product            Article @relation(fields: [articleId], references: [id])
  articleId          Int
  packagingType      String
  packagingLength    Float
  packagingWidth     Float
  packagingHeight    Float
  quantityPerPackage Int

  @@map("packaging")
}

model Cart {
  id     Int        @id @default(autoincrement())
  user   User       @relation(fields: [userId], references: [id])
  userId Int
  items  CartItem[]

  @@map("carts")
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Article @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int

  @@map("cart_items")
}


